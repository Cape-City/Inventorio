plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "org.jetbrains.kotlin.jvm"
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

archivesBaseName = "${rootProject.archives_base_name}-1.16-forge"

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    forge()
}

minecraft {
    runs {
        client {
            property "forge.logging.console.level", "debug"
        }
    }
}

loom {
    mixinConfig "inventorio.mixins.json"
}

repositories {
    maven { url "https://thedarkcolour.github.io/KotlinForForge/" }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    modImplementation("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }

    implementation("thedarkcolour:kotlinforforge:${rootProject.forge_kotlin_version}")
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}