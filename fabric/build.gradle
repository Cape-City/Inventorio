plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "org.jetbrains.kotlin.jvm"
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

archivesBaseName = "${rootProject.archives_base_name}-1.16-fabric"

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    fabric()
}

repositories {
    maven { url "https://maven.terraformersmc.com/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${rootProject.fabric_kotlin_version}"
    modImplementation "io.github.prospector:modmenu:1.14.13+build.22"
    modImplementation ("dev.emi:trinkets:${rootProject.trinkets_version}") {
        transitive = false
    }
    modImplementation ("com.github.Geometrically:Gravestones:${rootProject.gravestones_tag}") {
        transitive = false
    }

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}